<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.apache.shenyu.admin.mapper.TagRelationMapper">
    <resultMap id="BaseResultMap" type="org.apache.shenyu.admin.model.entity.TagRelationDO">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated"/>
        <result column="date_updated" jdbcType="TIMESTAMP" property="dateUpdated"/>
        <result column="api_id" jdbcType="VARCHAR" property="apiId"/>
        <result column="tag_id" jdbcType="VARCHAR" property="tagId"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        date_created,
        date_updated,
        api_id,
        tag_id
    </sql>

    <select id="existed" resultType="java.lang.Boolean">
        SELECT TRUE
        FROM tag_relation
        WHERE id = #{id}
        LIMIT 1
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM tag_relation
        WHERE id = #{id, jdbcType=VARCHAR}
    </select>

    <select id="selectByQuery" parameterType="org.apache.shenyu.admin.model.query.TagRelationQuery"
            resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM tag_relation
        <where>
            <if test="apiId != null">
                api_id = #{apiId, jdbcType=VARCHAR}
            </if>
            <if test="tagId != null">
                tag_id = #{tagId, jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <insert id="insert" parameterType="org.apache.shenyu.admin.model.entity.TagRelationDO">
        INSERT INTO tag_relation
        (id,
        date_created,
        date_updated,
        api_id,
        tag_id)
        VALUES
        (#{id, jdbcType=VARCHAR},
        #{dateCreated, jdbcType=TIMESTAMP},
        #{dateUpdated, jdbcType=TIMESTAMP},
        #{apiId, jdbcType=VARCHAR},
        #{tagId, jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="org.apache.shenyu.admin.model.entity.TagRelationDO">
        INSERT INTO tag_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            <if test="dateCreated != null">
                date_created,
            </if>
            <if test="dateUpdated != null">
                date_updated,
            </if>
            <if test="apiId != null">
                api_id,
            </if>
            <if test="tagId != null">
                tag_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id, jdbcType=VARCHAR},
            <if test="dateCreated != null">
                #{dateCreated, jdbcType=TIMESTAMP},
            </if>
            <if test="dateUpdated != null">
                #{dateUpdated, jdbcType=TIMESTAMP},
            </if>
            <if test="apiId != null">
                #{apiId, jdbcType=VARCHAR},
            </if>
            <if test="tagId != null">
                #{tagId, jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="org.apache.shenyu.admin.model.entity.TagRelationDO">
        UPDATE tag_relation
        <set>
            <if test="dateCreated != null">
                date_created = #{dateCreated, jdbcType=TIMESTAMP},
            </if>
            <if test="dateUpdated != null">
                date_updated = #{dateUpdated, jdbcType=TIMESTAMP},
            </if>
            <if test="apiId != null">
                name = #{apiId, jdbcType=VARCHAR},
            </if>
            <if test="tagId != null">
                tag_id = #{tagId, jdbcType=VARCHAR},
            </if>
        </set>
        WHERE id = #{id, jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="org.apache.shenyu.admin.model.entity.TagRelationDO">
        update tag_relation
        set
        api_id = #{apiId,jdbcType=VARCHAR},
        tag_id = #{tagId,jdbcType=VARCHAR},
        date_created = #{dateCreated,jdbcType=TIMESTAMP},
        date_updated = #{dateUpdated,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}

    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        DELETE FROM tag_relation
        WHERE id = #{id, jdbcType=VARCHAR}
    </delete>

    <delete id="deleteByIds" parameterType="java.util.List">
        DELETE FROM tag_relation
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id, jdbcType=VARCHAR}
        </foreach>
    </delete>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO tag_relation
        (id,
         date_created,
         date_updated,
         api_id,
         tag_id)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.id, jdbcType=VARCHAR},
             #{item.dateCreated, jdbcType=TIMESTAMP},
             #{item.dateUpdated, jdbcType=TIMESTAMP},
             #{item.apiId, jdbcType=VARCHAR},
             #{item.tagId, jdbcType=VARCHAR})
        </foreach>
    </insert>

    <delete id="deleteByApiId">
        delete
        from tag_relation
        where api_id = #{apiId,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteByApiIds" parameterType="java.util.List">
        DELETE FROM tag_relation
        WHERE api_id IN
        <foreach item="id" collection="apiIds" open="(" separator="," close=")">
            #{id, jdbcType=VARCHAR}
        </foreach>
    </delete>
</mapper>
